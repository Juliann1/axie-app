{"version":3,"sources":["components/Energy.js","components/Winlose.js","components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Energy","props","className","energy","onClick","substractone","addone","nextround","newgame","Winlose","wins","id","addwin","loses","addloss","draws","adddraw","winratio","Cards","cards","lesscard","morecard","App","state","count","round","history","local","localStorage","length","setItem","JSON","stringify","addOne","bind","nextRound","substractOne","newGame","lessCard","moreCard","handleHistory","this","setState","prev","localData","parse","getItem","toFixed","isNaN","e","storedHistory","target","handleWin","handleLose","handleDraw","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d00d96e3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Energy(props) {\r\n    \r\n    return (\r\n        <div className=\"energy-container\">\r\n            <h2 className=\"energy\">{props.energy} / 10</h2>\r\n            <div className=\"energy-btns\">\r\n                <button onClick={props.substractone}>Take one</button>\r\n                <button onClick={props.addone}>Add one</button>\r\n                <button onClick={props.nextround}>Next round</button>\r\n                <button onClick={props.newgame}>New Game</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport default function Winlose(props) {\r\n    return (\r\n        <div className=\"Winlose-cointainer\" >\r\n            <div className=\"Winlose\">\r\n                <div className=\"\">\r\n                    <h2>Wins</h2>\r\n                    <h2>{props.wins}</h2>\r\n                    <button id=\"win\" onClick={props.addwin}>add Win</button>\r\n                </div>\r\n                <div className=\"\">\r\n                    <h2>Loses</h2>\r\n                    <h2>{props.loses}</h2>\r\n                    <button id=\"lose\" onClick={props.addloss}>add Lose</button>\r\n                </div>\r\n                <div className=\"\">\r\n                    <h2>Draws</h2>\r\n                    <h2>{props.draws}</h2>\r\n                    <button id=\"draws\" onClick={props.adddraw}>add Draw</button>\r\n                </div>\r\n                <div className=\"winratio\">\r\n                    <h3>Winratio</h3>\r\n                    <h4>{props.winratio}%</h4>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Cards(props) {\r\n    return (\r\n        <div className=\"\">\r\n            <h2>Opponent cards: {props.cards}</h2>\r\n            <button onClick={props.lesscard}>- card</button>\r\n            <button onClick={props.morecard}>+ card</button>\r\n        </div>\r\n    )\r\n}","\nimport React from 'react'\nimport Energy from './components/Energy';\nimport Winlose from './components/Winlose';\nimport Cards from './components/Cards'\n\nexport default class App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            count: 3,\n            cards: 6,\n            round: 1,\n            history: {\n                wins: 0,\n                loses: 0,\n                draws: 0,\n                winratio: 0\n            },\n            local: '',\n        }\n\n\n\n        if (localStorage.length < 1) {\n\n            localStorage.setItem('history', JSON.stringify(this.state.history))\n        }\n\n        // Energy functions\n        this.addOne = this.addOne.bind(this)\n        this.nextRound = this.nextRound.bind(this)\n        this.substractOne = this.substractOne.bind(this)\n        this.newGame = this.newGame.bind(this)\n\n        // Card functions\n        this.lessCard = this.lessCard.bind(this)\n        this.moreCard = this.moreCard.bind(this)\n\n        // History functions\n        this.handleHistory = this.handleHistory.bind(this)\n    }\n\n    addOne() {\n        this.setState((prev) => {\n            if (prev.count === 10) {\n                return {\n                    count: prev.count\n                }\n            }\n            else {\n                return {\n                    count: prev.count + 1\n                }\n            }\n        })\n    }\n\n    substractOne() {\n        this.setState((prev) => {\n            if (prev.count === 0) {\n                return {\n                    count: prev.count\n                }\n            } else {\n                return {\n                    count: prev.count - 1\n                }\n            }\n\n        })\n    }\n    // TODO MAX CARDS\n    nextRound() {\n        this.setState((prev) => {\n            return {\n                round: prev.round + 1,\n                count: prev.count + 2,\n                cards: prev.cards + 3\n            }\n        })\n\n\n\n    }\n\n    newGame() {\n        this.setState(() => {\n            return {\n                round: 1,\n                count: 3,\n                cards: 6\n            }\n        })\n    }\n\n    lessCard() {\n        this.setState((prev) => {\n            return {\n                cards: prev.cards - 1\n            }\n        })\n    }\n\n    moreCard() {\n        this.setState((prev) => {\n            return {\n                cards: prev.cards + 1\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.setState(() => {\n            const localData = JSON.parse(localStorage.getItem('history'))\n            const {wins, loses, draws} = localData\n            let winratio = (wins / (wins + loses + draws) * 100).toFixed(1)\n            if (isNaN(winratio)) {\n                winratio = 0;\n            }\n            return {\n                history: {\n                    wins: wins,\n                    loses: loses,\n                    draws: draws,\n                    winratio: winratio\n                },\n                local: JSON.stringify(localData)\n            }\n        })\n    }\n\n\n    handleWin() {\n        this.setState((prev) => {\n            return {\n                history: {\n                    wins: prev.history.wins + 1,\n                    ...prev.history\n                }\n            }\n        })\n    }\n    handleLose() {\n        this.setState((prev) => {\n            return {\n                history: {\n                    wins: prev.history.wins,\n                    loses: prev.history.loses + 1,\n                    draws: prev.history.draws\n                }\n            }\n        })\n    }\n    handleDraw() {\n        this.setState((prev) => {\n            return {\n                history: {\n                    ...prev.history,\n                    draws: prev.history.draws + 1,\n                }\n            }\n        })\n    }\n\n    handleHistory(e) {\n\n        const storedHistory = JSON.parse(localStorage.getItem('history'))\n        if (e.target.id === 'win') {\n            this.handleWin()\n            storedHistory.wins = storedHistory.wins + 1\n            localStorage.setItem('history', JSON.stringify(storedHistory))\n        } else if (e.target.id === 'lose') {\n            this.handleLose()\n            storedHistory.loses = storedHistory.loses + 1\n            localStorage.setItem('history', JSON.stringify(storedHistory))\n        } else {\n            this.handleDraw()\n            storedHistory.draws = storedHistory.draws + 1\n            localStorage.setItem('history', JSON.stringify(storedHistory))\n        }\n\n        this.setState(() => {\n            const localData = JSON.parse(localStorage.getItem('history'))\n            const {wins, loses, draws} = localData\n            const winratio = (wins / (wins + loses + draws) * 100).toFixed(1)\n            \n            return {\n                history: {\n                    wins: wins,\n                    loses: loses,\n                    draws: draws,\n                    winratio: winratio\n                }\n\n            }\n        })\n    }\n\n\n\n\n    render() {\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"container-energy\">\n                    <h1 className=\"round\">Round {this.state.round}</h1>\n                    <Energy\n                        energy={this.state.count}\n                        addone={this.addOne}\n                        substractone={this.substractOne}\n                        nextround={this.nextRound}\n                        newgame={this.newGame} />\n                    <Cards\n                        cards={this.state.cards}\n                        lesscard={this.lessCard}\n                        morecard={this.moreCard}\n                    />\n                </div>\n                <div className=\"container-winlose\">\n                    <Winlose \n                        wins={this.state.history.wins}\n                        loses={this.state.history.loses}\n                        draws={this.state.history.draws}\n                        winratio={this.state.history.winratio}\n                        addwin={this.handleHistory}\n                        addloss={this.handleHistory}\n                        adddraw={this.handleHistory}\n                    />\n                </div>\n            </div>\n        )\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}